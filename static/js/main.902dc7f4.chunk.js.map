{"version":3,"sources":["components/Events.js","components/EventsList.js","App.js","index.js"],"names":["Events","props","className","name","startDate","view","width","height","title","src","url","href","target","EventsList","events","map","key","text","start","local","description","App","useState","setEvents","isLoading","setIsLoading","Fragment","onClick","fetch","method","mode","then","response","json","data","length","ReactDOM","render","document","getElementById"],"mappings":"wTA0BeA,MAtBf,SAAgBC,GACd,OACE,wBAAIC,UAAW,UACb,4BAAKD,EAAME,MACX,4BAAKF,EAAMG,WACX,2BAAIH,EAAMI,MACV,4BACEC,MAAM,QACNC,OAAO,QACPC,MAAM,aACNC,IAAKR,EAAMS,MAEb,4BAAQR,UAAU,eAChB,uBAAGS,KAAMV,EAAMS,IAAKE,OAAO,UAA3B,kB,MCcOC,MA1Bf,SAAoBZ,GAClB,OACE,wBAAIC,UAAW,CAAC,gBACbD,EAAMa,OAAOC,KAAI,SAACD,GAAD,OAChB,kBAAC,EAAD,CAWEE,IAAKF,EAAOJ,IACZP,KAAMW,EAAOX,KAAKc,KAClBb,UAAWU,EAAOI,MAAMC,MACxBd,KAAMS,EAAOM,YAAYH,KACzBP,IAAKI,EAAOJ,W,MCsBPW,MA1Cf,WACE,MAA4BC,mBAAS,IAArC,mBAAOR,EAAP,KAAeS,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KA0BA,OACE,kBAAC,IAAMC,SAAP,KACE,iCACE,4BAAQC,QA3Bd,WACEF,GAAa,GACbG,MACE,2GACA,CACEC,OAAQ,MACRC,KAAM,SASPC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLX,EAAUW,EAAKpB,WAEnBW,GAAa,KAMT,gBAEF,kCACID,GAAaV,EAAOqB,OAAS,GAAK,kBAAC,EAAD,CAAYrB,OAAQA,KACtDU,GAA+B,IAAlBV,EAAOqB,QAAgB,wDACrCX,GAAa,4CClCtBY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.902dc7f4.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Events.css';\n\nfunction Events(props) {\n  return (\n    <li className={'events'}>\n      <h2>{props.name}</h2>\n      <h3>{props.startDate}</h3>\n      <p>{props.view}</p>\n      <iframe\n        width='400px'\n        height='400px'\n        title='eventBrite'\n        src={props.url}\n      ></iframe>\n      <button className='eventButton'>\n        <a href={props.url} target='_blank'>\n          Open Events\n        </a>\n      </button>\n    </li>\n  );\n}\n// As I was googling for web view but it came up for react native so I decided to put iframe insted\n\nexport default Events;\n","import React from 'react';\n\nimport Events from './Events';\nimport './EventsList.css';\n\nfunction EventsList(props) {\n  return (\n    <ul className={['events-list']}>\n      {props.events.map((events) => (\n        <Events\n          // as events have same id:12345\n          // I tried here diferent methods even to\n          // get random nr for ID as map function\n          // requires diferent key\n          // so I even tried like:\n          // Date.now() + Math.random()\n          // wich have 1 milisecound diference\n          // but still was failing for me\n          // so I used URL which probably\n          // is not the best way I think\n          key={events.url}\n          name={events.name.text}\n          startDate={events.start.local}\n          view={events.description.text}\n          url={events.url}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default EventsList;\n","import React, { useState } from 'react';\nimport EventsList from './components/EventsList';\nimport './App.css';\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function fetchEventsHandler() {\n    setIsLoading(true);\n    fetch(\n      'https://cors-anywhere.herokuapp.com/https://thedistance.co.uk/wp-content/uploads/2020/01/eventbrite.json',\n      {\n        method: 'GET',\n        mode: 'cors',\n      }\n      // Here I lost lot of time as I was acuring CORS error\n      // I was not geting back response for my HTTP request\n      // and didnt realy know how to overcome it\n      // eventualy i found this\n      // cors-anywhere.herokuapp.com/corsdemo\n      // where i pressed that button and it worked\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setEvents(data.events);\n      });\n    setIsLoading(false);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchEventsHandler}>Show Events</button>\n      </section>\n      <section>\n        {!isLoading && events.length > 0 && <EventsList events={events} />}\n        {!isLoading && events.length === 0 && <p>Could not find any events</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}